# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI

on:
  push:
    paths-ignore:
      - CHANGES
      - Dockerfile
      - Dockerfile.distroless
      - "**.md"
      - "**.txt"
      - "**.html"
      - "**.completions"
      - "scribbles/**"
    branches: [ master ]
  pull_request:
    paths-ignore:
      - CHANGES
      - Dockerfile
      - "**.md"
      - "**.txt"
      - "**.html"
      - "**.completions"
      - "scribbles/**"
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        java: [ '8', '17', '21', '22', '23' ]
    name: Java ${{ matrix.Java }} CI

    steps:
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

    - name: Set up JDK ${{ matrix.Java }}
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'

    - name: Cache Maven repo
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

    - name: Build with Maven
      run: |
        mvn -V -B clean install site --file pom.xml -Djdk.console=jdk.jshell -Djavac.target=`echo "${{ matrix.java }}" | sed -e "s/-ea//g"` \
          && cp lambda/target/jmurmel.jar . \
          && cp samples.murmel-mlib/mlib.lisp .

    - name: Upload Jar, mlib, docs
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: jmurmel-temurin-${{ matrix.java }}
        path: |
          jmurmel.jar
          mlib.lisp
          murmel-langref.md
          mlib.md
          murmel-langref.html
          mlib.html
          LICENSE


    - name: Create W64 launcher
      if: ${{ matrix.java == '8' }}
      run: |
        mvn -V -B package -pl scripts -Dlaunch4j.skip=false \
          && cp scripts/target/jmurmel.exe . \
          && cp samples.murmel-mlib/mlib.lisp .


    - name: Upload launch4j exe, mlib, docs
      if: ${{ matrix.java == '8' }}
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: jmurmel-w64-slim
        path: |
          jmurmel.exe
          mlib.lisp
          murmel-langref.md
          mlib.md
          murmel-langref.html
          mlib.html
          LICENSE
          legal/launch4j/*
